org: narendranr
app: aws-node-express-dynamo-api
service: aws-node-express-dynamo-api
frameworkVersion: "3"

useDotenv: true

custom:
  serverless-dynamodb:
    start:
      docker: true
      port: 8000
      inMemory: true
      migrate: true
      seed: true
      convertEmptyValues: true
      noStart: true
    stages:
      - local

provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]

functions:
  api:
    handler: index.handler
    events:
      - httpApi: "*"

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: GSI_email_sk
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: "ALL"
        BillingMode: PAY_PER_REQUEST
        TableName: "${env:USERS_TABLE}-${env:STAGE}"

plugins:
  - serverless-dotenv-plugin
  - serverless-dynamodb
  - serverless-offline
